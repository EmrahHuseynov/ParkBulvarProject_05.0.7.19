// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ParkBulvarProject.Models.DAL;

namespace ParkBulvarProject.Migrations
{
    [DbContext(typeof(ParkBulvarContext))]
    [Migration("20190704075854_initial_v1")]
    partial class initial_v1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062");

            modelBuilder.Entity("ParkBulvarProject.Models.Entities.AdminConfig", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Password")
                        .HasMaxLength(255);

                    b.Property<string>("Role")
                        .HasMaxLength(255);

                    b.Property<string>("Username")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("admnConfig");
                });

            modelBuilder.Entity("ParkBulvarProject.Models.Entities.Compaign", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Image")
                        .HasMaxLength(255);

                    b.Property<byte>("IsCompleted");

                    b.Property<int>("Queue");

                    b.Property<int>("ShopId");

                    b.Property<byte>("Type");

                    b.HasKey("Id");

                    b.HasIndex("ShopId");

                    b.ToTable("compaigns");
                });

            modelBuilder.Entity("ParkBulvarProject.Models.Entities.CompaignDictionary", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CompaignId");

                    b.Property<string>("Duration")
                        .HasMaxLength(255);

                    b.Property<int>("LanguageId");

                    b.Property<string>("Name")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.HasIndex("CompaignId");

                    b.HasIndex("LanguageId");

                    b.ToTable("compaignDictionaries");
                });

            modelBuilder.Entity("ParkBulvarProject.Models.Entities.HomeSliderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Image");

                    b.Property<int>("Queue");

                    b.HasKey("Id");

                    b.ToTable("homeSliderItems");
                });

            modelBuilder.Entity("ParkBulvarProject.Models.Entities.Language", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Code")
                        .HasMaxLength(20);

                    b.Property<string>("Name")
                        .HasMaxLength(255);

                    b.Property<int>("Queue");

                    b.HasKey("Id");

                    b.ToTable("languages");
                });

            modelBuilder.Entity("ParkBulvarProject.Models.Entities.MetaTags", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("TagName");

                    b.HasKey("Id");

                    b.ToTable("metaTags");
                });

            modelBuilder.Entity("ParkBulvarProject.Models.Entities.SeoDescription", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Word");

                    b.HasKey("Id");

                    b.ToTable("seoDescriptions");
                });

            modelBuilder.Entity("ParkBulvarProject.Models.Entities.SeoKeyword", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Word");

                    b.HasKey("Id");

                    b.ToTable("seoKeyWords");
                });

            modelBuilder.Entity("ParkBulvarProject.Models.Entities.Shop", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Floor");

                    b.Property<string>("Image")
                        .HasMaxLength(255);

                    b.Property<string>("Logo")
                        .HasMaxLength(255);

                    b.Property<string>("Number")
                        .HasMaxLength(30);

                    b.Property<int>("Queue");

                    b.Property<string>("day1")
                        .HasMaxLength(30);

                    b.Property<string>("day2")
                        .HasMaxLength(30);

                    b.Property<string>("day3")
                        .HasMaxLength(30);

                    b.Property<string>("day4")
                        .HasMaxLength(30);

                    b.Property<string>("day5")
                        .HasMaxLength(30);

                    b.Property<string>("day6")
                        .HasMaxLength(30);

                    b.Property<string>("day7")
                        .HasMaxLength(30);

                    b.HasKey("Id");

                    b.ToTable("shops");
                });

            modelBuilder.Entity("ParkBulvarProject.Models.Entities.ShopCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CoverImage")
                        .HasMaxLength(255);

                    b.Property<string>("Logo");

                    b.Property<int>("Queue");

                    b.HasKey("Id");

                    b.ToTable("shopCategories");
                });

            modelBuilder.Entity("ParkBulvarProject.Models.Entities.ShopCategoryDictionary", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("LanguageId");

                    b.Property<string>("Name");

                    b.Property<int>("ShopCategoryId");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.HasIndex("ShopCategoryId");

                    b.ToTable("shopCategoryDictionaries");
                });

            modelBuilder.Entity("ParkBulvarProject.Models.Entities.ShopDictionary", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AboutText");

                    b.Property<int>("LanguageId");

                    b.Property<string>("Name")
                        .HasMaxLength(255);

                    b.Property<int>("ShopId");

                    b.Property<string>("WorkHours");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.HasIndex("ShopId");

                    b.ToTable("shopDictionaries");
                });

            modelBuilder.Entity("ParkBulvarProject.Models.Entities.ShopToCategories", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ShopCategoryId");

                    b.Property<int>("ShopId");

                    b.HasKey("Id");

                    b.HasIndex("ShopCategoryId");

                    b.HasIndex("ShopId");

                    b.ToTable("ShopToCategories");
                });

            modelBuilder.Entity("ParkBulvarProject.Models.Entities.ShopToSubCategories", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ShopId");

                    b.Property<int>("SubShopCategoryId");

                    b.HasKey("Id");

                    b.HasIndex("ShopId");

                    b.HasIndex("SubShopCategoryId");

                    b.ToTable("ShopToSubCategories");
                });

            modelBuilder.Entity("ParkBulvarProject.Models.Entities.SubShopCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Queue");

                    b.Property<int>("ShopCategoryId");

                    b.HasKey("Id");

                    b.HasIndex("ShopCategoryId");

                    b.ToTable("subShopCategories");
                });

            modelBuilder.Entity("ParkBulvarProject.Models.Entities.SubShopCategoryDictionary", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("LanguageId");

                    b.Property<string>("Name")
                        .HasMaxLength(255);

                    b.Property<int>("SubShopCategoryId");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.HasIndex("SubShopCategoryId");

                    b.ToTable("subShopCategoryDictionaries");
                });

            modelBuilder.Entity("ParkBulvarProject.Models.Entities.Tables.AboutUsPage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Image")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("aboutUsPages");
                });

            modelBuilder.Entity("ParkBulvarProject.Models.Entities.Tables.AboutUsPageDictionary", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AboutUspageId");

                    b.Property<int>("LanguageId");

                    b.Property<string>("Text");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.HasIndex("AboutUspageId");

                    b.HasIndex("LanguageId");

                    b.ToTable("aboutUsPageDictionaries");
                });

            modelBuilder.Entity("ParkBulvarProject.Models.Entities.Tables.Follower", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("followers");
                });

            modelBuilder.Entity("ParkBulvarProject.Models.Entities.Tables.GalleryImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Image")
                        .HasMaxLength(255);

                    b.Property<int>("Queue");

                    b.HasKey("Id");

                    b.ToTable("galleryImages");
                });

            modelBuilder.Entity("ParkBulvarProject.Models.Entities.Tables.GeneralInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("HowToGo");

                    b.Property<string>("Phone")
                        .HasMaxLength(30);

                    b.Property<string>("WorkHours")
                        .HasMaxLength(30);

                    b.HasKey("Id");

                    b.ToTable("generalInfos");
                });

            modelBuilder.Entity("ParkBulvarProject.Models.Entities.Tables.News", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Queue");

                    b.Property<string>("TitleImage")
                        .HasMaxLength(255);

                    b.Property<byte>("Type");

                    b.Property<DateTime>("dateTime");

                    b.HasKey("Id");

                    b.ToTable("news");
                });

            modelBuilder.Entity("ParkBulvarProject.Models.Entities.Tables.NewsDictionary", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("LanguageId");

                    b.Property<int>("NewsId");

                    b.Property<string>("Text");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.HasIndex("NewsId");

                    b.ToTable("newsDictionaries");
                });

            modelBuilder.Entity("ParkBulvarProject.Models.Entities.Tables.NewsImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Image")
                        .HasMaxLength(255);

                    b.Property<int>("NewsId");

                    b.HasKey("Id");

                    b.HasIndex("NewsId");

                    b.ToTable("newsImages");
                });

            modelBuilder.Entity("ParkBulvarProject.Models.Entities.Tables.NewsPage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Image")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("newsPages");
                });

            modelBuilder.Entity("ParkBulvarProject.Models.Entities.Tables.NewsPageDictionary", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("LanguageId");

                    b.Property<int>("NewsPageId");

                    b.Property<string>("Text");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.HasIndex("NewsPageId");

                    b.ToTable("newsPageDictionaries");
                });

            modelBuilder.Entity("ParkBulvarProject.Models.Entities.Tables.SocialLink", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Icon");

                    b.Property<string>("Link");

                    b.HasKey("Id");

                    b.ToTable("socialLinks");
                });

            modelBuilder.Entity("ParkBulvarProject.Models.Entities.Compaign", b =>
                {
                    b.HasOne("ParkBulvarProject.Models.Entities.Shop", "Shop")
                        .WithMany("Compaigns")
                        .HasForeignKey("ShopId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ParkBulvarProject.Models.Entities.CompaignDictionary", b =>
                {
                    b.HasOne("ParkBulvarProject.Models.Entities.Compaign", "Compaign")
                        .WithMany("CompaignDictionaries")
                        .HasForeignKey("CompaignId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ParkBulvarProject.Models.Entities.Language", "Language")
                        .WithMany("CompaignDictionaries")
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ParkBulvarProject.Models.Entities.ShopCategoryDictionary", b =>
                {
                    b.HasOne("ParkBulvarProject.Models.Entities.Language", "Language")
                        .WithMany("ShopCategoryDictionaries")
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ParkBulvarProject.Models.Entities.ShopCategory", "ShopCategory")
                        .WithMany("ShopCategoryDictionaries")
                        .HasForeignKey("ShopCategoryId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ParkBulvarProject.Models.Entities.ShopDictionary", b =>
                {
                    b.HasOne("ParkBulvarProject.Models.Entities.Language", "Language")
                        .WithMany("ShopDictionaries")
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ParkBulvarProject.Models.Entities.Shop", "Shop")
                        .WithMany("ShopDictionaries")
                        .HasForeignKey("ShopId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ParkBulvarProject.Models.Entities.ShopToCategories", b =>
                {
                    b.HasOne("ParkBulvarProject.Models.Entities.ShopCategory", "ShopCategory")
                        .WithMany("ShopToCategories")
                        .HasForeignKey("ShopCategoryId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ParkBulvarProject.Models.Entities.Shop", "Shop")
                        .WithMany("ShopToCategories")
                        .HasForeignKey("ShopId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ParkBulvarProject.Models.Entities.ShopToSubCategories", b =>
                {
                    b.HasOne("ParkBulvarProject.Models.Entities.Shop", "Shop")
                        .WithMany("ShopToSubCategories")
                        .HasForeignKey("ShopId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ParkBulvarProject.Models.Entities.SubShopCategory", "SubShopCategory")
                        .WithMany("ShopToSubCategories")
                        .HasForeignKey("SubShopCategoryId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ParkBulvarProject.Models.Entities.SubShopCategory", b =>
                {
                    b.HasOne("ParkBulvarProject.Models.Entities.ShopCategory", "ShopCategory")
                        .WithMany("SubShopCategories")
                        .HasForeignKey("ShopCategoryId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ParkBulvarProject.Models.Entities.SubShopCategoryDictionary", b =>
                {
                    b.HasOne("ParkBulvarProject.Models.Entities.Language", "Language")
                        .WithMany("SubShopCategoryDictionaries")
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ParkBulvarProject.Models.Entities.SubShopCategory", "SubShopCategory")
                        .WithMany("SubShopCategoryDictionaries")
                        .HasForeignKey("SubShopCategoryId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ParkBulvarProject.Models.Entities.Tables.AboutUsPageDictionary", b =>
                {
                    b.HasOne("ParkBulvarProject.Models.Entities.Tables.AboutUsPage", "AboutUsPage")
                        .WithMany("aboutUsPageDictionaries")
                        .HasForeignKey("AboutUspageId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ParkBulvarProject.Models.Entities.Language", "Language")
                        .WithMany("aboutUsPageDictionaries")
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ParkBulvarProject.Models.Entities.Tables.NewsDictionary", b =>
                {
                    b.HasOne("ParkBulvarProject.Models.Entities.Language", "Language")
                        .WithMany("NewsDictionaries")
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ParkBulvarProject.Models.Entities.Tables.News", "News")
                        .WithMany("NewsDictionaries")
                        .HasForeignKey("NewsId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ParkBulvarProject.Models.Entities.Tables.NewsImage", b =>
                {
                    b.HasOne("ParkBulvarProject.Models.Entities.Tables.News", "News")
                        .WithMany("NewsImages")
                        .HasForeignKey("NewsId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ParkBulvarProject.Models.Entities.Tables.NewsPageDictionary", b =>
                {
                    b.HasOne("ParkBulvarProject.Models.Entities.Language", "Language")
                        .WithMany("NewsPageDictionaries")
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ParkBulvarProject.Models.Entities.Tables.NewsPage", "NewsPage")
                        .WithMany("NewsPageDictionaries")
                        .HasForeignKey("NewsPageId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
